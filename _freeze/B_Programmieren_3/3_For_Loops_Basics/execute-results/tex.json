{
  "hash": "f65f5a3b621421d1e6d130f1b58e3f17",
  "result": {
    "engine": "jupyter",
    "markdown": "# Basic *for loop* {#sec-forloops-2}\n\nBis jetzt haben wir lediglich Sachen in die Konsole herausgeben lassen, doch wie schon bei Functions ist der Zweck einer *for loop* meist, dass nach Durchführung etwas davon zurückbleibt. Aber `return()` gibt es wie bereits erwähnt bei *for loops* nicht. Nehmen wir folgendes Beispiel:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfor rolle in [\"bitch\",\"lover\",\"child\",\"mother\",\"sinner\",\"saint\"]:\n    liedzeile = \"I'm a \"+ rolle \n    print(liedzeile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nI'm a bitch\nI'm a lover\nI'm a child\nI'm a mother\nI'm a sinner\nI'm a saint\n```\n:::\n:::\n\n\nDer Output von dieser For-Loop sind zwar sechs Liederzeilen, wenn wir die Variabel `liedzeile` aber jetzt anschauen ist dort nur das Resultat aus der letzten Durchführung gespeichert. Das gleiche gilt auch für die Variabel `rolle`.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nliedzeile\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n\"I'm a saint\"\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nrolle\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n'saint'\n```\n:::\n:::\n\n\nDas verrät uns etwas über die Funktionsweise des *for loops*: Bei jedem Durchgang werden die Variablen immer wieder überschrieben. Wenn wir also den Output des ganzen For-Loops abspeichern wollen, müssen wir dies etwas vorbereiten.\n\nDafür erstellen wir unmittelbar for dem *for loops* einen leeren Behälter, zum Beispiel eine leere Liste:\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nrefrain = []\n```\n:::\n\n\nNun können wir innerhalb des *Loops* `append()` nutzen, um den Output von einem Durchgang dieser Liste hinzuzufügen.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nfor rolle in [\"bitch\",\"lover\",\"child\",\"mother\",\"sinner\",\"saint\"]:\n    liedzeile = \"I'm a \"+ rolle \n    refrain.append(liedzeile)\n```\n:::\n\n\nIn unserer Liste `refrain` ist nun der Wert *jeder* Iteration gespeichert.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nrefrain\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n[\"I'm a bitch\",\n \"I'm a lover\",\n \"I'm a child\",\n \"I'm a mother\",\n \"I'm a sinner\",\n \"I'm a saint\"]\n```\n:::\n:::\n\n\n",
    "supporting": [
      "3_For_Loops_Basics_files"
    ],
    "filters": []
  }
}