{
  "hash": "d6b3faa21fe69bff885516bbc287369b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\noutput: false\necho: true                       # set to true to show solution\ncode-fold: true                  # set to true to show solution\ncode-summary: \"Musterlösung\"    \n---\n\n# Übung 15\n\n## Übung 15.1 {#sec-ex-import-wald}\n\nLade das File \"wald.gpkg\" (siehe @tbl-datensaetze) herunter und speichere es in deiner Workings Directory. Importiere den Datensatz und speichere ihn in der Variable `wald`. \n\nSchau dir `wald` an (mit `type`, `.plot()` etc.)\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport geopandas as gpd \n\nwald = gpd.read_file(\"data/wald.gpkg\")\n\nwald\ntype(wald)\nwald.plot()\n```\n:::\n\n\n## Übung 15.2 {#sec-ex-spatialjoin}\n\nFühre einen SpatialJoin zwischen `wald` und `zeckenstiche` durch. Vertausche die Reihenfolge (`left_df`, `right_df`) und schaue dir den Output an. Wodurch unterscheiden sich die beiden outputs? Was sagt dir das über die Funktionsweise von `sjoin`?\n\n:::{.callout-note}\n## Wichtig!\n\nMelde dich bei den Betreuern wenn der *SpatialJoin* bei dir nicht funktioniert und du eine Fehlermeldung bekommst.\n:::\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nzeckenstiche_gpd = gpd.read_file(\"data/zeckenstiche.gpkg\")\n\ngpd.sjoin(left_df = zeckenstiche_gpd, right_df = wald)\ngpd.sjoin(left_df = wald, right_df = zeckenstiche_gpd) \n\n# in beiden Fällen hat der Output geich viele Zeilen. \n# In der ersten Variante ist die Geometrie\n# des Outputs \"Point\", im zweiten Fall \"Multipolygon\"\n```\n:::\n\n\n## Übung 15.3 {#sec-ex-count}\n\nFühre nun den SpatialJoin aus @sec-ex-spatialjoin in der Reihenfolge aus, der dir am sinnvollsten erscheint. Weise den Output dieser Operation der Variabel `zeckenstiche_join` zu.\n\nNutze nun die dazugewonnene Spalte `Wald_text` um die Anzahl Zeckenstich-Meldungen *im Wald* zu zählen. Dazu musst du wie folgt vorgehen: \n\n1. Entsprechende Spalte selektieren (siehe @sec-ex-sel-col)\n2. Werte in der Spalte mit \"ja\" vergleichen\n3. Anzahl `True` mit `sum()` zählen (`True` entspricht immer `1`, `False` entspricht immer `0`)\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# die folgende Variante (mit dem Output \"point\") ist sinnvoller, da auch\n# wir uns primär für die Punkte (Zeckenstiche) interessieren.\nzeckenstiche_join = gpd.sjoin(left_df = zeckenstiche_gpd, right_df = wald)\n\nsum(zeckenstiche_join[\"Wald_text\"] == \"ja\")\n```\n:::\n\n\n## Übung 15.4\n\nBerechne nun *Anteil* der Zeckenstiche im Wald (gemessen an der Anzahl Zeckenstich-Meldungen total). Weise den Output der Variabel `anteil_wald` zu.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nanteil_wald = sum(zeckenstiche_join[\"Wald_text\"] == \"ja\")/len(zeckenstiche_join[\"Wald_text\"])\n```\n:::\n\n\n",
    "supporting": [
      "7_Uebung_15_files/figure-pdf"
    ],
    "filters": []
  }
}