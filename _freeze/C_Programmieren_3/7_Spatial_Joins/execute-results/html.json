{
  "hash": "92df3d14b6228099ee3e7fafe21f472b",
  "result": {
    "engine": "jupyter",
    "markdown": "# Spatial Joins {#sec-spatialjoin}\n\n\nIn dieser Aufgabe wollen wir für jeden Zeckenstich ermitteln, ob er sich im Wald befindet oder nicht. Den Wald-Layer kennt ihr bereits aus dem Block \"Datenqualität und Unsicherheit\" und wir haben ihn in @sec-pythongis-formate kurz angeschaut. Nutzen wir hier nochmal die Gelegenheit, um den Wald und die Zeckenstiche (siehe @tbl-datensaetze) als Geodaten einzulesen und in einem grossen Plot zu visualisieren.\n\n::: {#d68aa43d .cell execution_count=1}\n``` {.python .cell-code}\nimport geopandas as gpd\n\nzeckenstiche_gpd = gpd.read_file(\"data/zeckenstiche.gpkg\")\nwald = gpd.read_file(\"data/wald.gpkg\")\n\nminx, miny, maxx, maxy = zeckenstiche_gpd.geometry.total_bounds  # holt die x und y min bzw. max werte und speichert diese in 4 variabeln\n\nfrom matplotlib.colors import ListedColormap\n\nbase = wald.plot(column = \"Wald_text\", legend = True, cmap = ListedColormap([\"green\",\"lightgrey\"]))\nzeckenstiche_gpd.plot(color = \"Red\", ax = base)\n\nbase.set_xlim(minx - 10, maxx + 10) \nbase.set_ylim(miny - 5, maxy + 5)\n```\n\n::: {.cell-output .cell-output-display}\n![](7_Spatial_Joins_files/figure-html/cell-2-output-1.png){width=479 height=442}\n:::\n:::\n\n\n## Wie funktioniert ein *Spatial Join*?\n\nIn @sec-pythongis habt ihr euch mit den GIS-Funktionalitäten von `geopandas` vertraut gemacht. Eine ganz zentrale Funktion in GIS sind die sogenannten \"Spatial Joins\". Dabei werden Attribute von einem Geodatensatz auf einen anderen Geodatensatz aufgrund einer räumlichen Beziehung der beiden Datensätze übertragen. Konkret für unsere Zeckenstiche bedeutet dies: Jedem Zeckenstich sollte die Eigenschaft \"Wald: ja\" / \"Wald: nein\" aus `wald zugewiesen werden. Am einfachsten lässt sich dies in einer Darstellung erklären:\n\n![\"Spatial Join\" zwischen `zeckenstiche` und `wald`. In diesem Spatial Join wurde die Geometrie von `zeckenstiche` übernommen, das heisst das Resultat des Joins ist ein Punkt-Layer.](figures/spatialjoin.jpg){#fig-spatialjoin}\n\nIn Python wird ein *Spatial Join* zwischen `zeckenstiche` und `wald` wie folgt durchgeführt (wichtig ist dabei auch die Reihenfolge der Argumente: `left_df` bestimmt den Geometrietyp des Outputs):\n\n::: {#6c6bfaab .cell execution_count=2}\n``` {.python .cell-code}\ngpd.sjoin(left_df = zeckenstiche_gpd, right_df = wald)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>accuracy</th>\n      <th>x</th>\n      <th>y</th>\n      <th>geometry</th>\n      <th>index_right</th>\n      <th>Shape_Area</th>\n      <th>Wald_text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2550</td>\n      <td>439.128951</td>\n      <td>2681116</td>\n      <td>1250648</td>\n      <td>POINT (2681116 1250648)</td>\n      <td>0</td>\n      <td>2.380876e+08</td>\n      <td>nein</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10437</td>\n      <td>301.748542</td>\n      <td>2681092</td>\n      <td>1250672</td>\n      <td>POINT (2681092 1250672)</td>\n      <td>0</td>\n      <td>2.380876e+08</td>\n      <td>nein</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9174</td>\n      <td>301.748542</td>\n      <td>2681128</td>\n      <td>1250683</td>\n      <td>POINT (2681128 1250683)</td>\n      <td>0</td>\n      <td>2.380876e+08</td>\n      <td>nein</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>8773</td>\n      <td>301.748542</td>\n      <td>2681111</td>\n      <td>1250683</td>\n      <td>POINT (2681111 1250683)</td>\n      <td>0</td>\n      <td>2.380876e+08</td>\n      <td>nein</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2764</td>\n      <td>301.748529</td>\n      <td>2681131</td>\n      <td>1250692</td>\n      <td>POINT (2681131 1250692)</td>\n      <td>0</td>\n      <td>2.380876e+08</td>\n      <td>nein</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2513</td>\n      <td>301.748529</td>\n      <td>2681171</td>\n      <td>1250711</td>\n      <td>POINT (2681171 1250711)</td>\n      <td>1</td>\n      <td>7.963237e+07</td>\n      <td>ja</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>9185</td>\n      <td>301.748542</td>\n      <td>2681107</td>\n      <td>1250712</td>\n      <td>POINT (2681107 1250712)</td>\n      <td>1</td>\n      <td>7.963237e+07</td>\n      <td>ja</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>28521</td>\n      <td>301.748542</td>\n      <td>2681124</td>\n      <td>1250720</td>\n      <td>POINT (2681124 1250720)</td>\n      <td>1</td>\n      <td>7.963237e+07</td>\n      <td>ja</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>26745</td>\n      <td>301.748542</td>\n      <td>2681117</td>\n      <td>1250725</td>\n      <td>POINT (2681117 1250725)</td>\n      <td>1</td>\n      <td>7.963237e+07</td>\n      <td>ja</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>27391</td>\n      <td>301.748542</td>\n      <td>2681138</td>\n      <td>1250725</td>\n      <td>POINT (2681138 1250725)</td>\n      <td>1</td>\n      <td>7.963237e+07</td>\n      <td>ja</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "7_Spatial_Joins_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.min.js\" integrity=\"sha384-c9c+LnTbwQ3aujuU7ULEPVvgLs+Fn6fJUvIGTsuu1ZcCf11fiEubah0ttpca4ntM sha384-6V1/AdqZRWk1KAlWbKBlGhN7VG4iE/yAZcO6NZPMF8od0vukrvr0tg4qY6NSrItx\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js\" integrity=\"sha384-ZvpUoO/+PpLXR1lu4jmpXWu80pZlYUAfxl5NsBMWOEPSjUn/6Z/hRTt8+pR6L4N2\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}