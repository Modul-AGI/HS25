{
  "hash": "c3ef4b591adb5d1993090bc12020820d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\noutput: false\necho: true                       # set to true to show solution\ncode-fold: true                  # set to true to show solution\ncode-summary: \"Musterlösung\"    \n---\n\n\n\n\n\n\n\n\n## Übung 14\n\nNun ist es Zeit, dass ihr selbst mit *GeoDataFrames* Hand anlegt. Achtet dabei immer auf die Datentypen eurer Daten (mit `type`) und konsultiert dazu @sec-pythongis-datenstruktur. Zudem ist Geopandas gut dokumentiert, es lohnt ich diese immer wieder zu konsultieren: [geopandas.org](https://geopandas.org)\n\n<!-- % *DataFrame* zu *GeoDataFrame* -->\n## Übung  14.1\n\nImportiere *Geopandas* und wandle `zeckenstiche` in eine *GeoDataFrame* um (`zeckenstiche`). Vergiss nicht, das Koordinatenbezugssystem festzulegen!\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport geopandas as gpd\n\n# Übung 14.1\nzeckenstiche = pd.read_csv(\"data/zeckenstiche.csv\")\n\ngeom = gpd.points_from_xy(\n  zeckenstiche['x'],    # ↘\n  zeckenstiche['y']     # → die Geometrie Spalte\n  )   \n\nzeckenstiche_gpd = gpd.GeoDataFrame(\n    zeckenstiche,    # die DataFrame (\"Attributtabelle\")\n    geometry = geom, #\n    crs = 2056       # das Koordinatenbezugssystem (EPSG Code)\n)\n```\n:::\n\n\n<!-- % Punkte Buffern -->\n## Übung  14.2\n\nBuffere die Zeckenstiche um eine Distanz von 12 Meter und speichere den Output in der Variabel `zeckenstiche_buffer`. Visualisiere die gebufferten Punkte mit `.explore()`.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nzeckenstiche_buffer = zeckenstiche_gpd.buffer(12)\nzeckenstiche_buffer.explore()\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'zeckenstiche_gpd' is not defined\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[2], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m zeckenstiche_buffer \u001b[38;5;241m=\u001b[39m \u001b[43mzeckenstiche_gpd\u001b[49m\u001b[38;5;241m.\u001b[39mbuffer(\u001b[38;5;241m12\u001b[39m)\n\u001b[1;32m      2\u001b[0m zeckenstiche_buffer\u001b[38;5;241m.\u001b[39mexplore()\n\n\u001b[0;31mNameError\u001b[0m: name 'zeckenstiche_gpd' is not defined\n```\n:::\n:::\n\n\n## Übung  14.3\n\nExtrahiere die Umrisse von `zeckenstiche_buffer` und speichere diese in `zeckenstiche_buffer_outline`. Visualisiere anschliessend diese Umrisse.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nzeckenstiche_buffer_outline = zeckenstiche_buffer.boundary\n\nzeckenstiche_buffer_outline.explore()\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'zeckenstiche_buffer' is not defined\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[3], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m zeckenstiche_buffer_outline \u001b[38;5;241m=\u001b[39m \u001b[43mzeckenstiche_buffer\u001b[49m\u001b[38;5;241m.\u001b[39mboundary\n\u001b[1;32m      3\u001b[0m zeckenstiche_buffer_outline\u001b[38;5;241m.\u001b[39mexplore()\n\n\u001b[0;31mNameError\u001b[0m: name 'zeckenstiche_buffer' is not defined\n```\n:::\n:::\n\n\n## Übung  14.4\n\nNutze nachstehenden Code um zwei Datensätze im gleichen Plot darzustellen. \n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Nicht interaktiv:\nfrom matplotlib import pyplot as plt\nfig, ax = plt.subplots()\n\nzeckenstiche_buffer_outline.plot(ax = ax, color = \"green\")\nzeckenstiche_gpd.plot(ax = ax, color = \"pink\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'zeckenstiche_buffer_outline' is not defined\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[4], line 5\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mmatplotlib\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m pyplot \u001b[38;5;28;01mas\u001b[39;00m plt\n\u001b[1;32m      3\u001b[0m fig, ax \u001b[38;5;241m=\u001b[39m plt\u001b[38;5;241m.\u001b[39msubplots()\n\u001b[0;32m----> 5\u001b[0m \u001b[43mzeckenstiche_buffer_outline\u001b[49m\u001b[38;5;241m.\u001b[39mplot(ax \u001b[38;5;241m=\u001b[39m ax, color \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mgreen\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      6\u001b[0m zeckenstiche_gpd\u001b[38;5;241m.\u001b[39mplot(ax \u001b[38;5;241m=\u001b[39m ax, color \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpink\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\n\u001b[0;31mNameError\u001b[0m: name 'zeckenstiche_buffer_outline' is not defined\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](6_Uebung_14_files/figure-pdf/cell-5-output-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Interaktiv:\nbase = zeckenstiche_buffer_outline.explore(color = \"green\")\nzeckenstiche_gpd.explore(m = base, color = \"pink\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'zeckenstiche_buffer_outline' is not defined\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[5], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# Interaktiv:\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m base \u001b[38;5;241m=\u001b[39m \u001b[43mzeckenstiche_buffer_outline\u001b[49m\u001b[38;5;241m.\u001b[39mexplore(color \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mgreen\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      3\u001b[0m zeckenstiche_gpd\u001b[38;5;241m.\u001b[39mexplore(m \u001b[38;5;241m=\u001b[39m base, color \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpink\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\n\u001b[0;31mNameError\u001b[0m: name 'zeckenstiche_buffer_outline' is not defined\n```\n:::\n:::\n\n\n<!-- % Envelope -->\n## Übung  14.5\n\nBerechne das \"Envelope\" von `zeckenstiche_gpd` anhand der Beispiele in @sec-raeumliche-operationen. Speichere den Output als `zeckenstiche_envelope`.\n\n:::{.callout-note collapse=\"true\"}\n\nDenk daran, dass du zuerst noch einen Union machen musst (siehe @sec-raeumliche-operationen)\n\n:::\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nzeckenstiche_envelope = zeckenstiche_gpd.unary_union.envelope\n\nzeckenstiche_envelope\n```\n:::\n\n\n## Übung  14.6\n\nExportiere `zeckenstiche_gpd` als \"Geopackage\" mit dem Namen \"zeckenstiche.gpkg\". Lese nochmal @sec-pythongis-formate wenn du nicht mehr weisst, wie das geht. Versuche anschliessend, \"zeckenstiche.gpkg\" wieder einzulesen.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nzeckenstiche.to_file(\"data/zeckenstiche.gpkg\")\n```\n:::\n\n\n",
    "supporting": [
      "6_Uebung_14_files/figure-pdf"
    ],
    "filters": []
  }
}